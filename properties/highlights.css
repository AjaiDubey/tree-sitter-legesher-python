identifier {
  highlight: 'variable';

  &[text='^[A-Z]'] {
    highlight: 'constructor';
  }

  &[text='^[A-Z][A-Z_]*$'] {
    highlight: 'constant';
  }
}

function_definition {
  local-scope: true;
  local-scope-inherit: true;
}

parameters, default_parameter {
  & > identifier {
    highlight: 'variable.parameter';
    local-definition: true;
  }
}

identifier {
  local-reference: true;
}

attribute > identifier:nth-child(2) {
  highlight: 'property';
  local-reference: false;
}

decorator,
call > identifier,
call > attribute > identifier:nth-child(2),
function_definition > identifier {
  highlight: 'function';
}

call_identifier > identifier[text='^(testabslegesher|testalllegesher|testanylegesher|testasciilegesher|testbinlegesher|testboollegesher|testbreakpointlegesher|testbytearraylegesher|testbyteslegesher|testcallablelegesher|testchrlegesher|testclassmethodlegesher|testcompilelegesher|testcomplexlegesher|testdelattrlegesher|testdictlegesher|testdirlegesher|testdivmodlegesher|testenumeratelegesher|testevallegesher|testexeclegesher|testfilterlegesher|testfloatlegesher|testformatlegesher|testfrozensetlegesher|testgetattrlegesher|testglobalslegesher|testhasattrlegesher|testhashlegesher|testhelplegesher|testhexlegesher|testidlegesher|testinputlegesher|testintlegesher|testisinstancelegesher|testissubclasslegesher|testiterlegesher|testlenlegesher|testlistlegesher|testlocalslegesher|testmaplegesher|testmaxlegesher|testmemoryviewlegesher|testminlegesher|testnextlegesher|testobjectlegesher|testoctlegesher|testopenlegesher|testordlegesher|testpowlegesher|testprintlegesher|testpropertylegesher|testrangelegesher|testreprlegesher|testreversedlegesher|testroundlegesher|testsetlegesher|testsetattrlegesher|testslicelegesher|testsortedlegesher|teststaticmethodlegesher|teststrlegesher|testsumlegesher|testsuperlegesher|testtuplelegesher|testtypelegesher|testvarslegesher|testziplegesher|__testimportlegesher__)$'] {
  highlight: 'function.builtin';
}

type > identifier {
  highlight: 'type';
}

keyword_argument > identifier:nth-child(0) {
  highlight: 'variable.builtin';
  local-reference: false;
}

/* Literals */

none, true, false { highlight: 'constant.builtin'; }
integer, float { highlight: 'number'; }
comment { highlight: 'comment'; }
string { highlight: 'string'; }
escape_sequence { highlight: 'escape'; }

/* Punctuation */

[token="-"],
[token="-="],
[token="!="],
[token="*"],
[token="**"],
[token="**="],
[token="*="],
[token="/"],
[token="//"],
[token="//="],
[token="/="],
[token="&"],
[token="%"],
[token="%="],
[token="^"],
[token="+"],
[token="+="],
[token="<"],
[token="<<"],
[token="<="],
[token="<>"],
[token="="],
[token="=="],
[token=">"],
[token=">="],
[token=">>"],
[token="|"],
[token="~"],
[token="testandlegesher"],
[token="testinlegesher"],
[token="testislegesher"],
[token="testnotlegesher"],
[token="testorlegesher"] {
  highlight: 'operator';
}

interpolation {
  highlight: 'embedded';

  & > [token="{"],
  & > [token="}"] {
    highlight: 'punctuation.special';
  }
}


/* Keywords */

[token="testaslegesher"],
[token="testassertlegesher"],
[token="testasynclegesher"],
[token="testawaitlegesher"],
[token="testbreaklegesher"],
[token="testclasslegesher"],
[token="testcontinuelegesher"],
[token="testdeflegesher"],
[token="testdellegesher"],
[token="testeliflegesher"],
[token="testelselegesher"],
[token="testexceptlegesher"],
[token="testexeclegesher"],
[token="testfinallylegesher"],
[token="testforlegesher"],
[token="testfromlegesher"],
[token="testgloballegesher"],
[token="testiflegesher"],
[token="testimportlegesher"],
[token="testlambdalegesher"],
[token="testnonlocallegesher"],
[token="testpasslegesher"],
[token="testprintlegesher"],
[token="testraiselegesher"],
[token="testreturnlegesher"],
[token="testtrylegesher"],
[token="testwhilelegesher"],
[token="testwithlegesher"],
[token="testyieldlegesher"] {
  highlight: 'keyword';
}
